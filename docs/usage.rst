.. _usage:

Usage
-----

KINC provides two executables: ``kinc``, the command-line version, and ``qkinc``, the GUI version. The command-line version can use MPI while the GUI version can display data object files that are produced by KINC. KINC can construct a gene-coexpression network in the following steps:

1. ``import-emx``: Import expression matrix text file into binary format
2. ``similarity``: Compute a cluster matrix and correlation matrix from expression matrix
3. ``threshold``: Determine an appropriate correlation threshold for correlation matrix
4. ``extract``: Extract an edge list from a correlation matrix given a threshold

Below is an example usage of ``kinc`` on the Yeast dataset:

.. code:: bash

   # import expression matrix into binary format
   kinc run import-emx --input Yeast.txt --output Yeast.emx --nan NA

   # compute similarity matrix (with GMM clustering)
   mpirun -np 8 kinc run similarity --input Yeast.emx --ccm Yeast.ccm --cmx Yeast.cmx --clusmethod gmm --corrmethod spearman --minclus 1 --maxclus 5

   # determine correlation threshold
   kinc run rmt --input Yeast.cmx --log Yeast.log

   # read threshold from log file
   THRESHOLD=$(tail -n 1 Yeast.log)

   # extract network file from thresholded similarity matrix
   kinc run extract --emx Yeast.emx --ccm Yeast.ccm --cmx Yeast.cmx --output Yeast-net.txt --mincorr $THRESHOLD

A more thorough example usage is provided in ``scripts/kinc.sh``.

Palmetto
~~~~~~~~

1. Ensure the GEM you intend to process is in the correct format, read as a ``.txt`` file

2. Once ACE and KINC have been installed, run the following command:

.. code:: bash

   cp /zfs/feltus/mrbende/run_KINC.sh $HOME

``run_KINC.sh`` will take a plaintext GEM file, and output the following:

- ``.emx``: expression matrix
- ``.ccm``: cluster composition matrix
- ``.cmx``: correlation matrix
- ``.log``: this is the log file, containing the threshold value generated by rmt
- ``.o*``: this is the output file, check for errors at runtime
- ``-net.txt``: this is the network, the product of KINC

3. Due to the high volume of data being read and written by KINC, it is important to run KINC from a scratch directory. Run the following commands to ensure the files are accessible to KINC:

.. code:: bash

   cp $HOME/<name of GEM.txt> /scratch2/$USER
   cp $HOME/run_KINC.sh /scratch2/$USER

KINC will read from the directory you launch from, so you only need a GEM and the run script in scratch.

4. Navigate to your scratch directory:

.. code:: bash

   cd /scratch2/$USER

5. KINC is now ready to be run from scratch2. It requires two arguments to run:

- The name of your input GEM (e.g. ``EDS1014_GEM.txt``)
- The name you would like for your output files. The script will add the necessary file extensions. The following command will pass these variables to ``qsub``:

.. code:: bash

   qsub -v GEM="EDS1014_GEM.txt",OUTNAME="EDS1014" run_KINC.sh

The ``GEM`` variable should be set to the name of your GEM as it is written in scratch2. The ``OUTNAME`` variable should be set to what you would like your output files to be named, apart from the filename extensions. The job will then be submitted according to the allotted resource specifications of the script.

6. Once the job has finished, all 6 output files should be in your scratch2 directory. Check the last line of the log file to see the final threshold value, and check the output file to ensure there are no errors. The one CUDA error that appears at the top is noise and can be ignored.

7. The resulting network file can be visualized using `BioDepVis <https://github.com/SystemsGenetics/BioDepVis.git>`__ or Cytoscape.

SLURM
~~~~~

Although KINC is an MPI application, generally you can run ``kinc`` as a stand-alone application without ``mpirun`` and achieve normal serial behavior. However, on a SLURM cluster where MPI jobs must be run with the ``srun`` command and where PMI2 is compiled into MPI, ``kinc`` cannot be executed stand-alone. It must be executed using ``srun`` with the additional argument ``--mpi=pmi2``. For example:

.. code:: bash

   srun --mpi=pmi2 kinc run import-emx --input Yeast.txt --output Yeast.emx --nan NA
